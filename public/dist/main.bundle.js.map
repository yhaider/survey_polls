{"version":3,"sources":["/Users/yasmeenhaider/Desktop/mean_stack/mean_assignments/full_mean/mean-belt-take-two/public/src lazy","/Users/yasmeenhaider/Desktop/mean_stack/mean_assignments/full_mean/mean-belt-take-two/public/src/app/app-routing.module.ts","/Users/yasmeenhaider/Desktop/mean_stack/mean_assignments/full_mean/mean-belt-take-two/public/src/app/app.component.css","/Users/yasmeenhaider/Desktop/mean_stack/mean_assignments/full_mean/mean-belt-take-two/public/src/app/app.component.html","/Users/yasmeenhaider/Desktop/mean_stack/mean_assignments/full_mean/mean-belt-take-two/public/src/app/app.component.ts","/Users/yasmeenhaider/Desktop/mean_stack/mean_assignments/full_mean/mean-belt-take-two/public/src/app/app.module.ts","/Users/yasmeenhaider/Desktop/mean_stack/mean_assignments/full_mean/mean-belt-take-two/public/src/app/create/create.component.css","/Users/yasmeenhaider/Desktop/mean_stack/mean_assignments/full_mean/mean-belt-take-two/public/src/app/create/create.component.html","/Users/yasmeenhaider/Desktop/mean_stack/mean_assignments/full_mean/mean-belt-take-two/public/src/app/create/create.component.ts","/Users/yasmeenhaider/Desktop/mean_stack/mean_assignments/full_mean/mean-belt-take-two/public/src/app/dashboard/dashboard.component.css","/Users/yasmeenhaider/Desktop/mean_stack/mean_assignments/full_mean/mean-belt-take-two/public/src/app/dashboard/dashboard.component.html","/Users/yasmeenhaider/Desktop/mean_stack/mean_assignments/full_mean/mean-belt-take-two/public/src/app/dashboard/dashboard.component.ts","/Users/yasmeenhaider/Desktop/mean_stack/mean_assignments/full_mean/mean-belt-take-two/public/src/app/dashboard/table/table.component.css","/Users/yasmeenhaider/Desktop/mean_stack/mean_assignments/full_mean/mean-belt-take-two/public/src/app/dashboard/table/table.component.html","/Users/yasmeenhaider/Desktop/mean_stack/mean_assignments/full_mean/mean-belt-take-two/public/src/app/dashboard/table/table.component.ts","/Users/yasmeenhaider/Desktop/mean_stack/mean_assignments/full_mean/mean-belt-take-two/public/src/app/login/login.component.css","/Users/yasmeenhaider/Desktop/mean_stack/mean_assignments/full_mean/mean-belt-take-two/public/src/app/login/login.component.html","/Users/yasmeenhaider/Desktop/mean_stack/mean_assignments/full_mean/mean-belt-take-two/public/src/app/login/login.component.ts","/Users/yasmeenhaider/Desktop/mean_stack/mean_assignments/full_mean/mean-belt-take-two/public/src/app/poll/poll.component.css","/Users/yasmeenhaider/Desktop/mean_stack/mean_assignments/full_mean/mean-belt-take-two/public/src/app/poll/poll.component.html","/Users/yasmeenhaider/Desktop/mean_stack/mean_assignments/full_mean/mean-belt-take-two/public/src/app/poll/poll.component.ts","/Users/yasmeenhaider/Desktop/mean_stack/mean_assignments/full_mean/mean-belt-take-two/public/src/app/services/poll.service.ts","/Users/yasmeenhaider/Desktop/mean_stack/mean_assignments/full_mean/mean-belt-take-two/public/src/app/services/user.service.ts","/Users/yasmeenhaider/Desktop/mean_stack/mean_assignments/full_mean/mean-belt-take-two/public/src/environments/environment.ts","/Users/yasmeenhaider/Desktop/mean_stack/mean_assignments/full_mean/mean-belt-take-two/public/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\treturn new Promise(function(resolve, reject) { reject(new Error(\"Cannot find module '\" + req + \"'.\")); });\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/yasmeenhaider/Desktop/mean_stack/mean_assignments/full_mean/mean-belt-take-two/public/src lazy\n// module id = ../../../../../src lazy recursive\n// module chunks = main","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { CreateComponent } from './create/create.component';\nimport { PollComponent } from './poll/poll.component';\n\nconst routes: Routes = [\n  { path: '', component: LoginComponent },\n  // This route shows the login form\n\n  { path: 'dashboard', component: DashboardComponent },\n  // This route is the user's main dashboard\n\n  { path: 'create', component: CreateComponent },\n  // This route displays the create-a-poll page\n\n  { path: 'poll/:id', component: PollComponent }\n  // This route shows an individual poll's page\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/yasmeenhaider/Desktop/mean_stack/mean_assignments/full_mean/mean-belt-take-two/public/src/app/app-routing.module.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"*{\\n    margin: 0px;\\n    padding: 0px;\\n    font: inherit;\\n}\\nh1{\\n    font: 100 40pt \\\"Helvetica Neue\\\", sans-serif;\\n}\\n\\n.header p {\\n    font: 100 17pt \\\"Helvetica Neue\\\", sans-serif;\\n}\\n\\n.header {\\n    margin-left: 30px;\\n    margin-bottom: 40px;\\n}\\n\\n.stuff{\\n    width: 1300px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/yasmeenhaider/Desktop/mean_stack/mean_assignments/full_mean/mean-belt-take-two/public/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"header\\\">\\n        <h1>Survey Question: Polls</h1>\\n        <p>Ask and Answer to your heart's content!</p>\\n    </div>\\n    <div class=\\\"stuff\\\">\\n        <router-outlet></router-outlet>\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/yasmeenhaider/Desktop/mean_stack/mean_assignments/full_mean/mean-belt-take-two/public/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/yasmeenhaider/Desktop/mean_stack/mean_assignments/full_mean/mean-belt-take-two/public/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { UserService } from './services/user.service';\nimport { PollService } from './services/poll.service';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { CreateComponent } from './create/create.component';\nimport { PollComponent } from './poll/poll.component';\nimport { TableComponent } from './dashboard/table/table.component'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    DashboardComponent,\n    CreateComponent,\n    PollComponent,\n    TableComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpModule,\n    FormsModule\n  ],\n  providers: [UserService, PollService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/yasmeenhaider/Desktop/mean_stack/mean_assignments/full_mean/mean-belt-take-two/public/src/app/app.module.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"*{\\n    margin: 0px;\\n    padding: 0px;\\n    font: inherit;\\n}\\n\\n.container {\\n    margin-left: 80px;\\n    width: 900px;\\n}\\n\\na{\\n    margin-left: 570px;\\n    font: 100 10pt \\\"Helvetica Neue\\\", sans-serif;\\n}\\n\\nh2{\\n    font: 100 20pt \\\"Helvetica Neue\\\", sans-serif;\\n}\\n\\nlabel {\\n    font: 100 13pt \\\"Helvetica Neue\\\", sans-serif;\\n}\\nspan {\\n    font: 100 11pt \\\"Helvetica Neue\\\", sans-serif;\\n    font-style: italic;\\n}\\n\\nbutton{\\n    font: 100 10pt \\\"Helvetica Neue\\\", sans-serif;\\n    padding: 5px 10px 5px 10px;\\n    margin-top: 10px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/yasmeenhaider/Desktop/mean_stack/mean_assignments/full_mean/mean-belt-take-two/public/src/app/create/create.component.css\n// module id = ../../../../../src/app/create/create.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\n    <a [routerLink] = \\\"['/dashboard']\\\">Cancel</a>\\n    <h2>Create a New Poll</h2>\\n    <form #createForm = \\\"ngForm\\\" method=\\\"post\\\" (submit) = \\\"create()\\\">\\n        <label>\\n            Question:\\n            <input\\n                type=\\\"text\\\"\\n                name=\\\"question\\\"\\n                [(ngModel)] = \\\"newpoll.question\\\"\\n                #question = \\\"ngModel\\\"\\n                minLength = \\\"8\\\"\\n                required>\\n            <span *ngIf = \\\"question.invalid\\\">Please ensure you enter a question of at least 8 characters.</span>\\n        </label><br>\\n        <label>\\n            Option 1:\\n            <input\\n                type=\\\"text\\\"\\n                name=\\\"optionone\\\"\\n                [(ngModel)] = \\\"newpoll.optionone\\\"\\n                #optionone = \\\"ngModel\\\"\\n                minLength = \\\"4\\\"\\n                required>\\n            <span *ngIf = \\\"optionone.invalid\\\">Please ensure you enter an option of at least 4 characters.</span>\\n        </label><br>\\n        <label>\\n            Option 2:\\n            <input\\n                type=\\\"text\\\"\\n                name=\\\"optiontwo\\\"\\n                [(ngModel)] = \\\"newpoll.optiontwo\\\"\\n                #optiontwo = \\\"ngModel\\\"\\n                minLength = \\\"4\\\"\\n                required>\\n            <span *ngIf = \\\"optiontwo.invalid\\\">Please ensure you enter an option of at least 4 characters.</span>\\n        </label><br>\\n        <label>\\n            Option 3:\\n            <input\\n                type=\\\"text\\\"\\n                name=\\\"optionthree\\\"\\n                [(ngModel)] = \\\"newpoll.optionthree\\\"\\n                #optionthree = \\\"ngModel\\\"\\n                minLength = \\\"4\\\"\\n                required>\\n            <span *ngIf = \\\"optionthree.invalid\\\">Please ensure you enter an option of at least 4 characters.</span>\\n        </label><br>\\n        <label>\\n            Option 4:\\n            <input\\n                type=\\\"text\\\"\\n                name=\\\"optionfour\\\"\\n                [(ngModel)] = \\\"newpoll.optionfour\\\"\\n                #optionfour = \\\"ngModel\\\"\\n                minLength = \\\"4\\\"\\n                required>\\n            <span *ngIf = \\\"optionfour.invalid\\\">Please ensure you enter an option of at least 4 characters.</span>\\n        </label><br>\\n        <button type=\\\"submit\\\" name=\\\"submit\\\" [disabled] = \\\"createForm.invalid\\\">Submit</button>\\n    </form>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/yasmeenhaider/Desktop/mean_stack/mean_assignments/full_mean/mean-belt-take-two/public/src/app/create/create.component.html\n// module id = ../../../../../src/app/create/create.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../services/user.service';\nimport { PollService } from '../services/poll.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.css']\n})\nexport class CreateComponent implements OnInit {\n\n  private newpoll = {\n      question: \"\",\n      creator: \"\",\n      optionone: \"\",\n      optiontwo: \"\",\n      optionthree: \"\",\n      optionfour: \"\",\n  }\n  private name: string\n  // Declaring all of our variables\n\n  constructor(\n      private _us: UserService,\n      private _ps: PollService,\n      private _router: Router\n  ) { }\n  // Injecting necessary services\n\n  ngOnInit() {\n      this.getID()\n  }\n  // On page load we run our getID() function\n\n  getID(){\n      this._us.getID()\n      .then(data => this.name = data.name)\n      .catch(err => {\n          console.warn(err);\n          this._router.navigateByUrl('/')})\n  }\n  // This function will go to the user service and run the\n  // getID() function there, retrieve data (the user's name in this case)\n  // and save it in our name variable or retrieve an error and navigate\n  // back to the login page\n\n  create(){\n      this.newpoll.creator = this.name;\n      this._ps.create(this.newpoll)\n      .then(data => {\n          this._router.navigateByUrl('/dashboard')\n      })\n      .catch(err => console.warn(err))\n  }\n  // This function will first set our newpoll.creator to our name\n  // variable (which because of the getID() function, is our currently\n  // logged in user's name) and then it will go to our poll service\n  // and run the create() function, passing in our newpoll variable (which\n  // has our form information). We'll receive some data (the new poll) and then\n  // navigate back to the dashboard. If we don't receive that data, then we'll\n  // get an error\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/yasmeenhaider/Desktop/mean_stack/mean_assignments/full_mean/mean-belt-take-two/public/src/app/create/create.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"*{\\n    margin: 0px;\\n    padding: 0px;\\n    font: inherit;\\n}\\n\\n.header h2{\\n    font: 100 20pt \\\"Helvetica Neue\\\", sans-serif;\\n}\\n.header{\\n    margin-bottom: 20px;\\n}\\n\\n.logout {\\n    padding: 5px 10px 5px 10px;\\n    font: 100 10pt \\\"Helvetica Neue\\\", sans-serif;\\n}\\n\\n.header a {\\n    font: 100 10pt \\\"Helvetica Neue\\\", sans-serif;\\n}\\n\\n.current{\\n    font: 100 13pt \\\"Helvetica Neue\\\", sans-serif;\\n}\\n\\n.current h4 {\\n    font: 100 16pt \\\"Helvetica Neue\\\", sans-serif;\\n}\\n\\ninput[type=submit] {\\n    font: 100 10pt \\\"Helvetica Neue\\\", sans-serif;\\n}\\n\\n.topcontainer {\\n    margin-left: 50px;\\n    margin-bottom: 20px;\\n}\\n\\n.searchbar {\\n    margin-left: 30px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/yasmeenhaider/Desktop/mean_stack/mean_assignments/full_mean/mean-belt-take-two/public/src/app/dashboard/dashboard.component.css\n// module id = ../../../../../src/app/dashboard/dashboard.component.css\n// module chunks = main","module.exports = \"<div class=\\\"dashboard\\\">\\n    <div class=\\\"topcontainer\\\">\\n        <div class=\\\"header\\\">\\n            <h2>Welcome {{ name }}!</h2>\\n            <a [routerLink] = \\\"['/create']\\\">Create a New Poll</a> || <a><span (click) = \\\"logout()\\\"><button type=\\\"button\\\" class=\\\"logout\\\">Logout</button></span></a>\\n        </div>\\n        <div class=\\\"current\\\">\\n            <h4>Current Polls:</h4>\\n            <div class=\\\"searchbar\\\">\\n                <form #searchForm = \\\"ngForm\\\" method=\\\"post\\\" (submit) = \\\"searchPolls()\\\">\\n                    <label>\\n                        Search:\\n                        <input\\n                            type=\\\"text\\\"\\n                            name=\\\"search\\\"\\n                            [(ngModel)] = \\\"input.key\\\"\\n                            #search = \\\"ngModel\\\">\\n                    </label>\\n                    <input type=\\\"submit\\\" name=\\\"submit\\\" value=\\\"Submit\\\" (submit) = \\\"searchPolls()\\\">\\n                </form>\\n            </div>\\n        </div>\\n    </div>\\n    <app-table [displaypolls] = \\\"displaypolls\\\"></app-table>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/yasmeenhaider/Desktop/mean_stack/mean_assignments/full_mean/mean-belt-take-two/public/src/app/dashboard/dashboard.component.html\n// module id = ../../../../../src/app/dashboard/dashboard.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../services/user.service';\nimport { PollService } from '../services/poll.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n    private name: String\n    private polls: Array<any>\n    private deletedPollID\n    private displaypolls: Array<any>\n    private input = {\n        key: \"\"\n    }\n    // Declaring all of our variables\n\n  constructor(\n      private _us: UserService,\n      private _router: Router,\n      private _ps: PollService\n  ) { }\n  // Injecting services and necessary technologies\n\n  ngOnInit() {\n      this.getID()\n      this.displayPolls()\n  }\n  // On page load, the two above functions will run\n\n  getID(){\n        this._us.getID()\n        .then(data => this.name = data.name)\n        .catch(err => {\n            console.warn(err);\n            this._router.navigateByUrl('/')\n        })\n    }\n    // This function will go to the user service and run the\n    // getID() function there, retrieve data (the user's name in this case)\n    // and save it in our name variable or retrieve an error and navigate\n    // back to the login page\n\n    logout() {\n        this._us.logout()\n        .then(data => this._router.navigateByUrl('/'))\n        .catch(err => console.warn(err))\n    }\n    // This function will go to the user service and run the\n    // logout() function there, and will either receive data (which will\n    // then reroute the user back to login) or get an error\n\n    displayPolls(){\n        this._ps.displayPolls()\n        .then(data => {\n            this.polls = data;\n            this.displaypolls = data;\n        })\n        .catch(err => console.warn(err))\n    }\n    // This function will go to the poll service and run the\n    // displayPolls() function there, and then will either get data\n    // (all of the polls, in this case) and then assign the data to\n    // two variables or it will receive an error\n\n    searchPolls(){\n        console.log(this.input.key)\n        this.displaypolls = this.polls.filter(poll => {\n            return poll.question.toLowerCase().includes(this.input.key.toLowerCase())\n        })\n    }\n    // This function runs whent the search button is hit and then filters\n    // our polls variable based on the search and the polls which match are then kept in\n    // displaypolls\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/yasmeenhaider/Desktop/mean_stack/mean_assignments/full_mean/mean-belt-take-two/public/src/app/dashboard/dashboard.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"*{\\n    margin: 0px;\\n    padding: 0px;\\n    font: inherit;\\n}\\n\\n.container {\\n    margin-left: 80px;\\n}\\n\\nth, td{\\n    padding: 10px;\\n    border: 1px solid black;\\n}\\n\\nth{\\n    font: 100 17pt \\\"Helvetica Neue\\\", sans-serif;\\n}\\n\\ntd {\\n    font: 100 13pt \\\"Helvetica Neue\\\", sans-serif;\\n}\\nbutton {\\n    padding: 5px 10px 5px 10px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/yasmeenhaider/Desktop/mean_stack/mean_assignments/full_mean/mean-belt-take-two/public/src/app/dashboard/table/table.component.css\n// module id = ../../../../../src/app/dashboard/table/table.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\n    <table>\\n        <tr>\\n            <th>Name</th>\\n            <th>Survey Question</th>\\n            <th>Date Posted</th>\\n            <th>Action</th>\\n        </tr>\\n        <tr *ngFor = \\\"let poll of polls\\\">\\n            <td>{{ poll.creator }}</td>\\n            <td><a [routerLink] = \\\"['/poll', poll._id]\\\">{{ poll.question }}</a></td>\\n            <td>{{ poll.createdAt }}</td>\\n            <td><p *ngIf = \\\"poll.creator == name\\\"><button type=\\\"button\\\" name=\\\"button\\\" (click) = \\\"deletePoll(poll._id)\\\">Delete</button></p></td>\\n        </tr>\\n    </table>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/yasmeenhaider/Desktop/mean_stack/mean_assignments/full_mean/mean-belt-take-two/public/src/app/dashboard/table/table.component.html\n// module id = ../../../../../src/app/dashboard/table/table.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\nimport { UserService } from '../../services/user.service';\nimport { PollService } from '../../services/poll.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.css']\n})\nexport class TableComponent implements OnInit {\n\n    private polls\n    private name\n    // Declaring variables\n\n  constructor(\n      private _ps: PollService,\n      private _router: Router,\n      private _us: UserService\n  ) { }\n  // Injecting necessary services, etc.\n\n  @Input() set displaypolls(newpolls){\n      this.polls = newpolls\n  }\n  // Taking in an input from the parent dashboard component\n  // This parent-child relationship is in place so that the search\n  // function can work\n\n\n  ngOnInit() {\n      this.getID()\n  }\n  // Running the getID() function on page load\n\n  getID(){\n        this._us.getID()\n        .then(data => this.name = data.name)\n        .catch(err => {\n            console.warn(err);\n            this._router.navigateByUrl('/')\n        })\n    }\n    // This function will go to the user service and run the\n    // getID() function there, retrieve data (the user's name in this case)\n    // and save it in our name variable or retrieve an error and navigate\n    // back to the login page\n\n  deletePoll(id){\n      this._ps.deletePoll(id)\n      .then(data => this._router.navigateByUrl('/create'))\n      .catch((err) => console.warn(err))\n  }\n    // This function will go to the poll service and run the deletePoll function\n    // which takes in an id (the id of the poll you want to delete) and then\n    // it will retrieve data. If the data is not an error, it will navigate to the\n    // create a poll page\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/yasmeenhaider/Desktop/mean_stack/mean_assignments/full_mean/mean-belt-take-two/public/src/app/dashboard/table/table.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"*{\\n    margin: 0px;\\n    padding: 0px;\\n    font: inherit;\\n}\\n\\n.login{\\n    margin: auto;\\n    text-align: center;\\n}\\n\\n.login h2{\\n    font: 100 20pt \\\"Helvetica Neue\\\", sans-serif;\\n}\\n\\n.login label {\\n    font: 100 15pt \\\"Helvetica Neue\\\", sans-serif;\\n}\\n\\nspan{\\n    font: 100 13pt \\\"Helvetica Neue\\\", sans-serif;\\n    font-style: italic;\\n}\\n\\nbutton{\\n    margin-top: 10px;\\n    font: 100 10pt \\\"Helvetica Neue\\\", sans-serif;\\n    padding: 5px 10px 5px 10px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/yasmeenhaider/Desktop/mean_stack/mean_assignments/full_mean/mean-belt-take-two/public/src/app/login/login.component.css\n// module id = ../../../../../src/app/login/login.component.css\n// module chunks = main","module.exports = \"<div class=\\\"login\\\">\\n    <h2>Login</h2>\\n    <form #loginForm = \\\"ngForm\\\" method=\\\"post\\\" (submit) = \\\"login()\\\">\\n        <label>Name:\\n        <input\\n            type=\\\"text\\\"\\n            name=\\\"name\\\"\\n            placeholder = \\\"Enter your name...\\\"\\n            [(ngModel)] = \\\"user.name\\\"\\n            #name = \\\"ngModel\\\"\\n            required>\\n        </label><br>\\n        <button\\n            type=\\\"submit\\\"\\n            name=\\\"submit\\\"\\n            [disabled] = \\\"loginForm.invalid\\\">Submit</button>\\n    </form>\\n    <span *ngIf = \\\"name.invalid\\\">Please enter a name.</span>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/yasmeenhaider/Desktop/mean_stack/mean_assignments/full_mean/mean-belt-take-two/public/src/app/login/login.component.html\n// module id = ../../../../../src/app/login/login.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../services/user.service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n    private user = {\n            name: \"\",\n        }\n    // This is where the form will store\n    // its input and this is the variable we will\n    // send to the database to login a user\n\n    private myerr\n\n  constructor(\n      private _us: UserService,\n      private _router: Router\n  ) { }\n\n  ngOnInit() {\n  }\n\n  login(){\n      this._us.login(this.user)\n      .then(data => {\n          console.log(data);\n          this._router.navigateByUrl('/dashboard')\n      })\n      .catch(err => this.myerr = err)\n  }\n  // Occurs on the submit of the login form,\n  // this function will run the login function on the user\n  // service and pass to it the this.user variable\n  // Then it either receives data (the user's name) or \n  // an error and deals with each appropriately\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/yasmeenhaider/Desktop/mean_stack/mean_assignments/full_mean/mean-belt-take-two/public/src/app/login/login.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"*{\\n    margin: 0px;\\n    padding: 0px;\\n    font: inherit;\\n}\\n\\n.container{\\n    margin-left: 100px;\\n}\\n\\n.header h3{\\n    font: 100 20pt \\\"Helvetica Neue\\\", sans-serif;\\n}\\n.header p{\\n    font: 100 15pt \\\"Helvetica Neue\\\", sans-serif;\\n    margin-bottom: 20px;\\n}\\n\\n.table{\\n    margin-left: 50px;\\n}\\nth, td {\\n    padding: 10px;\\n    border: 1px solid black;\\n}\\nth {\\n    font: 100 17pt \\\"Helvetica Neue\\\", sans-serif;\\n}\\ntd {\\n    font: 100 13pt \\\"Helvetica Neue\\\", sans-serif;\\n    text-align: center;\\n}\\nbutton {\\n    padding: 5px 10px 5px 10px;\\n}\\n\\na{\\n    font: 100 11pt \\\"Helvetica Neue\\\", sans-serif;\\n    font-style: italic;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/yasmeenhaider/Desktop/mean_stack/mean_assignments/full_mean/mean-belt-take-two/public/src/app/poll/poll.component.css\n// module id = ../../../../../src/app/poll/poll.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\n    <div *ngIf = \\\"poll\\\" class = \\\"header\\\">\\n        <h3>{{ poll.question }}</h3>\\n        <p>Click on the vote button to vote!</p>\\n    </div>\\n    <div class=\\\"table\\\"*ngIf = \\\"options\\\">\\n        <table>\\n            <tr>\\n                <th>Option</th>\\n                <th>Current Count of Votes</th>\\n                <th>Action </th>\\n            </tr>\\n            <tr *ngFor = \\\"let option of options\\\">\\n                <td>{{ option.option }}</td>\\n                <td>{{ option.likes }}</td>\\n                <td><button type=\\\"button\\\" name=\\\"button\\\" (click)=\\\"getOption(option._id)\\\">Vote</button></td>\\n            </tr>\\n        </table>\\n        <p><a [routerLink] = \\\"['/dashboard']\\\">Go Back to Dashboard</a></p>\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/yasmeenhaider/Desktop/mean_stack/mean_assignments/full_mean/mean-belt-take-two/public/src/app/poll/poll.component.html\n// module id = ../../../../../src/app/poll/poll.component.html\n// module chunks = main","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { PollService } from '../services/poll.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UserService } from '../services/user.service'\n\n@Component({\n  selector: 'app-poll',\n  templateUrl: './poll.component.html',\n  styleUrls: ['./poll.component.css']\n})\nexport class PollComponent implements OnInit, OnDestroy {\n\n    private name\n    private subscription\n    private options\n    private pollid\n    private poll: Object\n    private voteoption\n    // Declaring our variables\n\n  constructor(\n      private _ps: PollService,\n      private _route: ActivatedRoute,\n      private _router: Router,\n      private _us: UserService\n  ) { }\n    // Injecting services and other packages required\n\n  ngOnInit() {\n      this.getID()\n\n      this.subscription = this._route.paramMap\n      .switchMap(params => this.pollid = params.get('id'))\n      .subscribe()\n\n      this.getOptions()\n      this.getPoll()\n  }\n  // On page load, we want to run the getID(), getOptions(), and\n  // the getPoll() functions listed below, and we also want to\n  // grab the id in the route parameter and save it to our pollid\n  // variable\n\n  ngOnDestroy(){\n      this.subscription.unsubscribe()\n  }\n  // Unsubscribing\n\n  getOptions(){\n      this._ps.getOptions(this.pollid)\n      .then(options => this.options = options)\n      .catch(err => console.log(err))\n  }\n  // This function will go to our poll service and run the getOptions()\n  // function, passing in our pollid variable (which contains the id from the route)\n  // and the we will either receive all of the options associated with that poll\n  // (in which case we will save them to our options variable) or an error which\n  // we will console.log\n\n  getPoll(){\n      this._ps.getPoll(this.pollid)\n      .then(poll => this.poll = poll)\n      .catch(err => console.warn(err))\n  }\n  // This function will go to our poll service and run the getPoll() function\n  // which takes the pollid. Then it'll receive a response. If it is data (the poll\n  // associated with the pollid), then we will set our poll variable to this incoming data\n  // If its an error, then it'll console.warn the error\n\n  vote(){\n      this._ps.vote(this.voteoption)\n      .then(data => {\n          console.log(data);\n          this.getOptions()})\n      .catch(err => console.warn(err))\n  }\n  // The function will go to our poll service and run the vote() function,\n  // passing in the option id. Then it will either receive a success message\n  // in which case we will run our getOptions() function to retrieve the\n  // updated data (like refreshing the page) or it will catch an error\n\n  getID(){\n        this._us.getID()\n        .then(data => this.name = data.name)\n        .catch(err => {\n            console.warn(err);\n            this._router.navigateByUrl('/');\n        })\n    }\n    // This function will go to the user service and run the\n    // getID() function there, retrieve data (the user's name in this case)\n    // and save it in our name variable or retrieve an error and navigate\n    // back to the login page\n\n    getOption(id){\n        this._ps.getOption(id)\n        .then(data => {\n            this.voteoption = data;\n            return this.vote()\n        })\n        .catch(err => console.log(err))\n    }\n    // This function will go to our poll service and run the getOption() function,\n    // passing in the option's id. Then we will receive data (the option's info)\n    // and save it to our voteoption variable. Otherwise we would get an error.\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/yasmeenhaider/Desktop/mean_stack/mean_assignments/full_mean/mean-belt-take-two/public/src/app/poll/poll.component.ts","import { Injectable } from '@angular/core';\nimport { Http, Response } from '@angular/http';\n\n@Injectable()\nexport class PollService {\n\n\n  constructor(\n      private _http: Http\n  ) { }\n\n\n  create(pollinfo){\n      return this._http.post('/api/polls', pollinfo)\n      .map((response: Response) => response.json())\n      .toPromise()\n  }\n  // This function takes poll info and sends a request to the server\n  // at the specified route and passes along this poll info which will\n  // be used to create a poll. Then it'll receive a response (either success or error)\n  // and then send that along to the component\n\n  displayPolls(){\n      return this._http.get('/api/polls')\n      .map((response: Response) => response.json())\n      .toPromise();\n  }\n  // This function will make a request to the server at the specified route\n  // and then gets a response (either an error or all of the polls) and then\n  // passes that along back to the component\n\n  deletePoll(id){\n      return this._http.delete(`/api/polls/${id}`)\n      .map((response: Response) => response.json())\n      .toPromise();\n  }\n  // This function will make a request to the server at the specified route\n  // with the id parameter containing the id passed along into the function\n  // Then it will receive a response (either a success delete message or an error)\n  // and pass that along back to the component\n\n  getOptions(id){\n     return this._http.get(`/api/options/${id}`)\n     .map((response: Response) => response.json())\n     .toPromise();\n  }\n  // This function will make a request to the server at the specified route,\n  // with the id parameter containing the id passed along into the function\n  // Then it will receive a response (either the options associated with that id,\n  // or an error message) and pass that response back to the component\n\n  getPoll(id){\n      return this._http.get(`/api/polls/${id}`)\n      .map((response:Response) => response.json())\n      .toPromise();\n  }\n  // This function will make a request to the server at the specified route,\n  // with the id parameter containing the id passed along into the function\n  // Then it'll receive a response (either the poll associated with that id\n  // or an error) and pass that response back to the component\n\n  vote(id){\n      return this._http.put(`/api/options`, id)\n      .map((response:Response) => response.json())\n      .toPromise();\n  }\n  // This function will make a request to the server at the specified route\n  // with the id parameter containing the id passed along into the function\n  // Then it will receive a response (either a success message or an error)\n  // and send it back to the component\n\n  getOption(id){\n      return this._http.get(`/api/options/one/${id}`)\n      .map((response: Response) => response.json())\n      .toPromise();\n  }\n  // This function will make a request to the server at the specified route\n  // with the id parameter containing the id passed along into the function\n  // Then it will receive a response (either the option associated with that id\n  // or an error) and then send that response back to the component\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/yasmeenhaider/Desktop/mean_stack/mean_assignments/full_mean/mean-belt-take-two/public/src/app/services/poll.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport 'rxjs';\n\n@Injectable()\nexport class UserService {\n\n  constructor(\n      private _http: Http\n  ) { }\n\n  login(user){\n      return this._http.post('/api/users', user)\n      .map((response: Response) => response.json())\n      .toPromise();\n  }\n  // This takes the user variable it has been passed\n  // and sends a request to our server at the specified route\n  // It receives a response and sends that back to our component\n\n  getID(){\n      return this._http.get('/api/users/one')\n      .map((response: Response) => response.json())\n      .toPromise();\n  }\n  // This sends a request to the server at the specified route\n  // It receives a response (which is the user's name or \"not logged in\")\n  // and sends that back to our component\n\n  logout(){\n      return this._http.get('/api/users/logout')\n      .map((response: Response) => response.json())\n      .toPromise();\n  }\n  // This sends a request to the server at the specified route\n  // It receives a response (which is \"bye bye\") and sends that\n  // back to our component\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/yasmeenhaider/Desktop/mean_stack/mean_assignments/full_mean/mean-belt-take-two/public/src/app/services/user.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/yasmeenhaider/Desktop/mean_stack/mean_assignments/full_mean/mean-belt-take-two/public/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// /Users/yasmeenhaider/Desktop/mean_stack/mean_assignments/full_mean/mean-belt-take-two/public/src/main.ts"],"sourceRoot":"webpack:///"}